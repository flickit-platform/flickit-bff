# Generated by Django 4.1 on 2024-07-26 12:03

import common.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentKit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('summary', models.TextField()),
                ('about', models.TextField()),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('last_modification_date', models.DateTimeField(auto_now=True, db_column='last_modification_time')),
                ('is_active', models.BooleanField(db_column='published', default=False)),
                ('is_private', models.BooleanField(default=False)),
                ('last_major_modification_time', models.DateTimeField(auto_now_add=True)),
                ('kit_version_id', models.BigIntegerField()),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.CASCADE, related_name='assessment_kit_owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assessment Kit',
                'verbose_name_plural': 'Assessment Kits',
                'db_table': 'fak_assessment_kit',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='AssessmentKitVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(0, 'ACTIVE'), (1, 'UPDATING'), (2, 'ARCHIVE')])),
                ('assessment_kit', models.ForeignKey(db_column='kit_id', on_delete=django.db.models.deletion.CASCADE, to='baseinfo.assessmentkit')),
            ],
            options={
                'db_table': 'fak_kit_version',
            },
        ),
        migrations.CreateModel(
            name='ExpertGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(db_column='title', max_length=100, unique=True)),
                ('bio', models.CharField(max_length=200)),
                ('about', models.TextField()),
                ('website', models.CharField(blank=True, max_length=200, null=True)),
                ('picture', models.ImageField(null=True, upload_to='expertgroup/images', validators=[common.validators.validate_file_size])),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('last_modification_date', models.DateTimeField(auto_now=True, db_column='last_modification_time')),
                ('deleted', models.BooleanField(db_column='deleted', default=True)),
                ('deletion_time', models.BooleanField(db_column='deletion_time', default=0)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.CASCADE, related_name='expert_groups_created_by', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(db_column='last_modified_by', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expert_groups_owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'fau_expert_group',
                'permissions': [('manage_expert_group', 'Manage Expert Groups')],
            },
        ),
        migrations.CreateModel(
            name='ExpertGroupAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invite_token', models.UUIDField(null=True)),
                ('status', models.SmallIntegerField(default=1)),
                ('invite_date', models.DateTimeField(null=True)),
                ('invite_expiration_date', models.DateTimeField(null=True)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('last_modification_date', models.DateTimeField(auto_now=True, db_column='last_modification_time')),
                ('deleted', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.CASCADE, related_name='expert_groups_access_created_by', to=settings.AUTH_USER_MODEL)),
                ('expert_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baseinfo.expertgroup')),
                ('last_modified_by', models.ForeignKey(db_column='last_modified_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='expert_groups_access_last_modified_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'fau_expert_group_user_access',
                'unique_together': {('expert_group', 'user')},
            },
        ),
        migrations.AddField(
            model_name='expertgroup',
            name='users',
            field=models.ManyToManyField(related_name='expert_groups', through='baseinfo.ExpertGroupAccess', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AssessmentKitAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_kit', models.ForeignKey(db_column='kit_id', on_delete=django.db.models.deletion.CASCADE, to='baseinfo.assessmentkit')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'fak_kit_user_access',
                'unique_together': {('assessment_kit', 'user')},
            },
        ),
        migrations.AddField(
            model_name='assessmentkit',
            name='expert_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessmentkits', to='baseinfo.expertgroup'),
        ),
        migrations.AddField(
            model_name='assessmentkit',
            name='last_modified_by',
            field=models.ForeignKey(db_column='last_modified_by', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='assessmentkit',
            name='users',
            field=models.ManyToManyField(related_name='assessment_kit', through='baseinfo.AssessmentKitAccess', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('last_modification_date', models.DateTimeField(auto_now=True)),
                ('index', models.PositiveIntegerField()),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.CASCADE, related_name='questionnaires', to=settings.AUTH_USER_MODEL)),
                ('kit_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questionnaires', to='baseinfo.assessmentkitversion')),
                ('last_modified_by', models.ForeignKey(db_column='last_modified_by', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Questionnaire',
                'verbose_name_plural': 'Questionnaires',
                'db_table': 'fak_questionnaire',
                'unique_together': {('title', 'kit_version'), ('code', 'kit_version'), ('index', 'kit_version')},
            },
        ),
    ]
